#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Buffer0
{
    float4 radialGrad[2];
    float opacity;
};

struct type_Buffer1
{
    float4 textureSize;
};

struct type_Buffer2
{
    float blurSize;
};

constant float _117[32] = { 0.02954000048339366912841796875, 0.039099998772144317626953125, 0.0384400002658367156982421875, 0.0374299995601177215576171875, 0.03609000146389007568359375, 0.034460000693798065185546875, 0.0325900018215179443359375, 0.030519999563694000244140625, 0.02830000035464763641357421875, 0.026000000536441802978515625, 0.02364999987185001373291015625, 0.0212999992072582244873046875, 0.01899999938905239105224609375, 0.01679000072181224822998046875, 0.014689999632537364959716796875, 0.0127199999988079071044921875, 0.010920000262558460235595703125, 0.0092799998819828033447265625, 0.0078099998645484447479248046875, 0.0065100002102553844451904296875, 0.0053699999116361141204833984375, 0.0043899999000132083892822265625, 0.0035500000230967998504638671875, 0.00285000004805624485015869140625, 0.0022599999792873859405517578125, 0.0017800000496208667755126953125, 0.00138000003062188625335693359375, 0.00106999999843537807464599609375, 0.000809999997727572917938232421875, 0.0006200000061653554439544677734375, 0.00046000001020729541778564453125, 0.00033999999868683516979217529296875 };
constant float _118[32] = { 0.666400015354156494140625, 2.4984800815582275390625, 4.49726009368896484375, 6.4960498809814453125, 8.49483013153076171875, 10.4936199188232421875, 12.49240016937255859375, 14.4911899566650390625, 16.4899692535400390625, 18.4887599945068359375, 20.4875392913818359375, 22.4863300323486328125, 24.4851093292236328125, 26.4839000701904296875, 28.4826793670654296875, 30.4814701080322265625, 32.480258941650390625, 34.479038238525390625, 36.4778289794921875, 38.476619720458984375, 40.475399017333984375, 42.47418975830078125, 44.472980499267578125, 46.471759796142578125, 48.470550537109375, 50.469341278076171875, 52.468128204345703125, 54.4669189453125, 56.465709686279296875, 58.46450042724609375, 60.463291168212890625, 62.462078094482421875 };

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
    float2 in_var_TEXCOORD1 [[user(locn1)]];
    float4 in_var_TEXCOORD2 [[user(locn2)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_Buffer0& Buffer0 [[buffer(0)]], constant type_Buffer1& Buffer1 [[buffer(1)]], constant type_Buffer2& Buffer2 [[buffer(2)]], texture2d<float> ramps [[texture(0)]], texture2d<float> image [[texture(1)]], sampler rampsSampler [[sampler(0)]], sampler imageSampler [[sampler(1)]])
{
    main0_out out = {};
    float _131 = (Buffer0.radialGrad[1].y * in.in_var_TEXCOORD0.x) - (Buffer0.radialGrad[1].z * in.in_var_TEXCOORD0.y);
    float4 _171;
    _171 = float4(0.0);
    for (int _174 = 0; _174 < 32; )
    {
        float2 _180 = float2(Buffer2.blurSize * Buffer1.textureSize.z, 0.0) * _118[_174];
        _171 += ((image.sample(imageSampler, fast::clamp(in.in_var_TEXCOORD1 + _180, in.in_var_TEXCOORD2.xy, in.in_var_TEXCOORD2.zw)) + image.sample(imageSampler, fast::clamp(in.in_var_TEXCOORD1 - _180, in.in_var_TEXCOORD2.xy, in.in_var_TEXCOORD2.zw))) * _117[_174]);
        _174++;
        continue;
    }
    out.out_var_SV_Target0 = _171 * (Buffer0.opacity * ramps.sample(rampsSampler, float2(((Buffer0.radialGrad[0].x * in.in_var_TEXCOORD0.x) + (Buffer0.radialGrad[0].y * in.in_var_TEXCOORD0.y)) + (Buffer0.radialGrad[0].z * sqrt((((Buffer0.radialGrad[0].w * in.in_var_TEXCOORD0.x) * in.in_var_TEXCOORD0.x) + ((Buffer0.radialGrad[1].x * in.in_var_TEXCOORD0.y) * in.in_var_TEXCOORD0.y)) - (_131 * _131))), Buffer0.radialGrad[1].w)).w);
    return out;
}

