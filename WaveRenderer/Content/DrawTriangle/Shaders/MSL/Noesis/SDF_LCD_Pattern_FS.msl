#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Buffer0
{
    float opacity;
};

struct type_Buffer1
{
    float4 textureSize;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
    float4 out_var_SV_Target1 [[color(1)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
    float2 in_var_TEXCOORD1 [[user(locn1)]];
    float2 in_var_TEXCOORD4 [[user(locn2)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_Buffer0& Buffer0 [[buffer(0)]], constant type_Buffer1& Buffer1 [[buffer(1)]], texture2d<float> pattern [[texture(0)]], texture2d<float> glyphs [[texture(1)]], sampler patternSampler [[sampler(0)]], sampler glyphsSampler [[sampler(1)]])
{
    main0_out out = {};
    float4 _54 = pattern.sample(patternSampler, in.in_var_TEXCOORD0);
    float2 _57 = dfdx(in.in_var_TEXCOORD4);
    float2 _62 = (_57 * Buffer1.textureSize.zw) * 0.3333333432674407958984375;
    float _79 = length(_57);
    float _85 = (-0.64999997615814208984375) * (1.0 - ((fast::clamp(1.0 / _79, 0.125, 0.25) - 0.125) * 8.0));
    float _86 = 0.64999997615814208984375 * _79;
    float3 _91 = smoothstep(float3(_85 - _86), float3(_85 + _86), (float3(glyphs.sample(glyphsSampler, (in.in_var_TEXCOORD1 - _62)).x, glyphs.sample(glyphsSampler, in.in_var_TEXCOORD1).x, glyphs.sample(glyphsSampler, (in.in_var_TEXCOORD1 + _62)).x) - float3(0.501960813999176025390625)) * 7.96875);
    float _95 = _91.y;
    out.out_var_SV_Target0 = float4((_54.xyz * Buffer0.opacity) * _91, _95);
    out.out_var_SV_Target1 = float4(_91 * (Buffer0.opacity * _54.w), _95);
    return out;
}

