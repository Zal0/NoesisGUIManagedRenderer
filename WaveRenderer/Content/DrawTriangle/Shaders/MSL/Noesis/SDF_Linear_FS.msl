#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Buffer0
{
    float opacity;
};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float2 in_var_TEXCOORD0 [[user(locn0)]];
    float2 in_var_TEXCOORD1 [[user(locn1)]];
    float2 in_var_TEXCOORD4 [[user(locn2)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_Buffer0& Buffer0 [[buffer(0)]], texture2d<float> ramps [[texture(0)]], texture2d<float> glyphs [[texture(1)]], sampler rampsSampler [[sampler(0)]], sampler glyphsSampler [[sampler(1)]])
{
    main0_out out = {};
    float _57 = length(dfdx(in.in_var_TEXCOORD4));
    float _63 = (-0.64999997615814208984375) * (1.0 - ((fast::clamp(1.0 / _57, 0.125, 0.25) - 0.125) * 8.0));
    float _64 = 0.64999997615814208984375 * _57;
    out.out_var_SV_Target0 = ramps.sample(rampsSampler, in.in_var_TEXCOORD0) * (smoothstep(_63 - _64, _63 + _64, 7.96875 * (glyphs.sample(glyphsSampler, in.in_var_TEXCOORD1).x - 0.501960813999176025390625)) * Buffer0.opacity);
    return out;
}

